// $em: 16px;
// $vx: 24px;
// $hx: 1ch;

//TODO: make indentation guide according to indentation amount from config, for now just hardcode 2ch. Make 1px vertical gradient that's has 2ch space between lines. Add a background to each row, with origin & clip starting from content-box, so the background covers the indentation guide gradient from the indentation depth to the right

.document {
  font-family: $font-mono;
  font-size: $em;
  line-height: $vx;
  color: $light;
  background-color: $dark;
}
.rownums {
  text-align: right;
  padding-left: 1ch;
  padding-right: 1ch;
}
.rows {
}
.row {
  padding: 0 .5ch 0;
  border-radius: 4px;
}
i {
  font-style: normal;
  overflow-wrap: break-word;
  display: inline-block;
  vertical-align: middle;
  border-radius: 3px;
}
i:empty {
  //TODO: empty check should be done in js (probably in select.element()), add a class to a node if it's contents are something other than 'contains' in language definition
  //TODO: and after that, there should be a highlighter that highlights illegal characters according to the whitelist in a prop, then a style here, like .illegal that's a red colored block
  //TODO: after that, maybe make a feature in the language definition, where you can define legal rows, kind of like a regexp of elements. So you could say that each row must begin with this or that, then can be this or that and so on
  padding-left: .5ch;
  padding-right: .5ch;
  //border-bottom-right-radius: 0;
  //border-bottom-left-radius: 0;
  min-height: $vx;
  margin-top: -2px;
  margin-bottom: -2px;
  box-shadow: inset 0px 0px 0px 1px currentColor;
}

.selected {
  background-color: $gray3;
}
i.selected {
  background-color: $gray2;
}
:focus {
  //box-shadow: inset 0px 0px 0px 1px white(.3);
  //box-shadow: 0px 0px 0px 1px $gray3;
  outline: none;
}
i.editing {
  color: $dark;
  background-color: white;
  // background-color: $dark;
  // margin-bottom: -2px;
  // border-bottom: 2px solid;
  // border-radius: 0;
}
//
//Comment
//
.comment {
  color: $gray1;
  font-style: italic;

  //Increase specificity with double class name
  &.comment > * {
    font-style: inherit;
    color: inherit;
  }
  &.comment > *::selection {
    color: white;
    background-color: $light;
  }
}


.hide-syntax {
  i {
    margin: 0 1ch 0 0 !important;
  }
  i::before,
  i::after {
    display: none !important;
  }
}

.word-wrap {
  .document {
    overflow-x: hidden;
    white-space: normal;
  }
  i {
    max-width: 100%;
    overflow: hidden;
    overflow-wrap: break-word;
  }
}
.no-word-wrap {
  .document {
    overflow-x: auto;
    white-space: nowrap;
  }
  i {
    overflow-wrap: normal;
  }
}
