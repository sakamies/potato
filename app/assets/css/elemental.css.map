{"version":3,"sources":["_base.scss","_vars.scss","_layout.scss","_doc.scss"],"names":[],"mappings":"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","file":"elemental.css","sourcesContent":["* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  color: inherit;\n}\nhtml, body {\n  height: 100%;\n  overflow: hidden;\n}\nbody {\n  font-family: sans-serif;\n  font-size: $em;\n  line-height: $vx;\n  -webkit-text-size-adjust: 100%;\n  //-webkit-font-smoothing: antialiased;\n}\na,\na:visited {\n  color: $blue;\n}\npre, code {\n  font: inherit;\n  font-family: $font-mono;\n}\ndl, dt, dd, li {\n}\nh1, h2, h3, h4, h5, h6 {\n  font: inherit;\n}\nh1 {\n  font-weight: 400;\n  font-size: 2em;\n  line-height: .85em;\n  text-transform: lowercase;\n  font-variant: small-caps;\n  margin: 10px 0px 20px 0;\n}\nh2 {\n  font-weight: 400;\n  font-size: 1.8em;\n  line-height: .85em;\n  text-transform: lowercase;\n  font-variant: small-caps;\n  margin: 20px 0px 10px 0;\n}\nabbr {\n  font-variant: small-caps;\n  text-transform: lowercase;\n}\nhr {\n  border: 1px solid currentColor;\n  border-width: 1px 0px 0px 0px;\n  margin: 10px 0px 9px 0px;\n  opacity: .3;\n}\nq::before,\nq::after {\n  content: '';\n}\n\ninput,\nbutton,\nselect,\ntextarea {\n  font: inherit;\n  min-height: $vx*2;\n  min-width: $vx*2;\n  margin: 0;\n  padding: $vx/2;\n  color: $dark;\n  background-color: $light;\n  border: none;\n  -webkit-font-smoothing: inherit;\n}\nselect {\n}\n\nbutton {\n  font-weight: 400;\n  display: inline-block;\n  vertical-align: middle;\n  padding: 0 2*$hx;\n  margin: 0;\n  color: white;\n  background-color: $dark;\n  border-radius: 0;\n  box-shadow: none;\n  cursor: pointer;\n}\nbutton:active {\n}\ninput:focus,\nbutton:focus,\nselect:focus,\ntextarea:focus {\n  outline: 1px solid hsla(198, 49%, 46%, 1);\n  outline-offset: -1px;\n}\n\n","$light: #f8f8f2;\n$lightgray: #828380;\n$gray1: #75715e;\n$gray2: #49483E;\n$gray3: #3e3d32;\n$dark: #272822;\n$red: #f92772;\n$purple: #be84ff;\n$green: #a6e22d;\n$yellow: #e6db74;\n$orange: #f6aa10;\n$blue: #66d9ef;\n\n$linkBlue: hsl(198, 49%, 46%);\n$hiGreen: hsl(70, 100%, 50%);\n\n$em: 16px;\n$vx: 24px;\n$hx: 1ch;\n\n//Fonts\n$font: sans-serif;\n$font-mono: 'Menlo', monospace;\n",".layout {\n  position: fixed;\n  height: 100%;\n  width: 100%;\n}\n.document {\n  overflow: auto;\n  height: 100%;\n  min-height: calc(100vh - 49px);\n  padding-bottom: 49px;\n}\n.toolbar {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: stretch;\n  height: 49px;\n  background-color: $dark;\n  border-top: 1px solid $gray3;\n}\n.toolbar > * {\n  flex: 1 0 auto;\n}\n.toolbar button {\n  text-align: left;\n  white-space: nowrap;\n  flex: 0 0 auto;\n\n}\n","// $em: 16px;\n// $vx: 24px;\n// $hx: 1ch;\n\n//TODO: make indentation guide according to indentation amount from config, for now just hardcode 2ch. Make 1px vertical gradient that's has 2ch space between lines. Add a background to each row, with origin & clip starting from content-box, so the background covers the indentation guide gradient from the indentation depth to the right\n\n.document {\n  font-family: $font-mono;\n  font-size: $em;\n  line-height: $vx;\n  color: $light;\n  background-color: $dark;\n}\n.rownums {\n  text-align: right;\n  padding-left: 1ch;\n  padding-right: 1ch;\n}\n.rows {\n}\n.row {\n  padding: 0 .5ch 0;\n  border-radius: 4px;\n}\ni {\n  font-style: normal;\n  overflow-wrap: break-word;\n  display: inline-block;\n  vertical-align: middle;\n  border-radius: 3px;\n}\ni:empty {\n  //TODO: empty check should be done in js (probably in select.element()), add a class to a node if it's contents are something other than 'contains' in language definition\n  //TODO: and after that, there should be a highlighter that highlights illegal characters according to the whitelist in a prop, then a style here, like .illegal that's a red colored block\n  //TODO: after that, maybe make a feature in the language definition, where you can define legal rows, kind of like a regexp of elements. So you could say that each row must begin with this or that, then can be this or that and so on\n  padding-left: .5ch;\n  padding-right: .5ch;\n  //border-bottom-right-radius: 0;\n  //border-bottom-left-radius: 0;\n  min-height: $vx;\n  margin-top: -2px;\n  margin-bottom: -2px;\n  box-shadow: inset 0px 0px 0px 1px currentColor;\n}\n\n.selected {\n  background-color: $gray3;\n}\ni.selected {\n  background-color: $gray2;\n}\n:focus {\n  //box-shadow: inset 0px 0px 0px 1px white(.3);\n  //box-shadow: 0px 0px 0px 1px $gray3;\n  outline: none;\n}\ni.editing {\n  color: $dark;\n  background-color: white;\n  // background-color: $dark;\n  // margin-bottom: -2px;\n  // border-bottom: 2px solid;\n  // border-radius: 0;\n}\n//\n//Comment\n//\n.comment {\n  color: $gray1;\n  font-style: italic;\n\n  //Increase specificity with double class name\n  &.comment > * {\n    font-style: inherit;\n    color: inherit;\n  }\n  &.comment > *::selection {\n    color: white;\n    background-color: $light;\n  }\n}\n\n\n.hide-syntax {\n  i {\n    margin: 0 1ch 0 0 !important;\n  }\n  i::before,\n  i::after {\n    display: none !important;\n  }\n}\n\n.word-wrap {\n  .document {\n    overflow-x: hidden;\n    white-space: normal;\n  }\n  i {\n    max-width: 100%;\n    overflow: hidden;\n    overflow-wrap: break-word;\n  }\n}\n.no-word-wrap {\n  .document {\n    overflow-x: auto;\n    white-space: nowrap;\n  }\n  i {\n    overflow-wrap: normal;\n  }\n}\n"],"sourceRoot":"/source/"}